# Generated by Django 4.2.6 on 2023-12-07 10:57

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('passport_number', models.IntegerField()),
                ('phone_number', models.IntegerField()),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EmploymentContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Enterprise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField()),
                ('full_name', models.CharField(max_length=150)),
                ('short_name', models.CharField(max_length=10, null=True)),
                ('address', models.CharField(max_length=150, null=True)),
                ('bank_details', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Payout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('risk_category', models.CharField(choices=[('first', 'Первая'), ('second', 'Вторая'), ('highest', 'Высшая')], max_length=10)),
                ('sum', models.IntegerField()),
                ('insured_event', models.CharField(choices=[('light', 'Легкое происшествие'), ('middle', 'Происшествие средней тяжести'), ('highest', 'Происшествие высокой степени тяжести')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('age', models.IntegerField()),
                ('risk_category', models.CharField(choices=[('first', 'Первая'), ('second', 'Вторая'), ('highest', 'Высшая')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='InsuranceContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signing_date', models.DateField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('type', models.CharField(choices=[('ind', 'Индивиудальный'), ('col', 'Коллективный')], max_length=10)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insurance_app.agent')),
                ('available_payouts', models.ManyToManyField(to='insurance_app.payout')),
                ('enterprise', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='insurance_app.enterprise')),
                ('participating_persons', models.ManyToManyField(to='insurance_app.person')),
            ],
        ),
        migrations.AddField(
            model_name='enterprise',
            name='specialization',
            field=models.ManyToManyField(to='insurance_app.specialization'),
        ),
        migrations.AddField(
            model_name='agent',
            name='contract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insurance_app.employmentcontract'),
        ),
        migrations.AddField(
            model_name='agent',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='insurance_agents', to='auth.group'),
        ),
        migrations.AddField(
            model_name='agent',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, related_name='insurance_agents', to='auth.permission'),
        ),
    ]
